- name: Deploy the project
  hosts: all
  vars_files:
    - vars/secrets.yml
    - vars/project.yml

  roles:

    - role: common
      common_fix_sudoers: yes
      common_sudoers_file_to_remove: debian-cloud-init
      tags: ['base', ]

    - role: nginx
      nginx_delete_default_site: yes
      nginx_catchall_enable: yes
      nginx_override_conf: |
        server_names_hash_bucket_size 128;

    - role: certbot
      certbot_create_if_missing: yes
      certbot_create_standalone_stop_services:
        - nginx
      certbot_certs:
        - domains:
          - "{{ host_public_domain_name }}"
        - domains:
          - "{{ host_public_domain_name_redirect_from }}"
      certbot_install_from_source: yes
      when: host_enable_acme_ssl|default(False)
      tags: ['ssl', ]

    - role: nginx-ssl-conf
      ssl_domains:
        - "{{ host_public_domain_name }}"
        - "{{ host_public_domain_name_redirect_from }}"
      tags: ['ssl', ]

    - role: flask
      tags: ['flask', ]

    - role: nginx-redirect
      nginx_redirects:
        - from: "{{ host_public_domain_name_redirect_from }}"
          to: "{{ host_public_domain_name }}"
          ssl: yes
      when: host_is_the_real_thing
      tags: ['redirect', ]

  post_tasks:

    - name: 'Add cron job for certbot renewal (if configured).'
      cron:
          name: Certbot automatic renewal.
          job: "sudo service nginx stop && {{ certbot_script }} renew {{ certbot_auto_renew_options }} ; sudo service nginx start"
          minute: "{{ certbot_auto_renew_minute }}"
          hour: "{{ certbot_auto_renew_hour }}"
          user: "{{ certbot_auto_renew_user }}"
      tags: ['ssl', ]
